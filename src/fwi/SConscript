import os
Import('*')

bin_list = [
           ]

lib = 'fwi'

modules = """
fwibase.cpp
fwiframework.cpp
ftiframework.cpp
fwiupdatevelop.cpp
fwiupdatesteplenop.cpp
docproduct.cpp
          """.split()

include_dir = [
  '#' + dirs['rsf'],
  '#' + dirs['common'],
  '#' + dirs['modeling'],
]

depend_libpath = []
depend_libs = ['modeling', 'common']

cflags = []
if compiler_set == 'sw':
  new_c_compiler = ['swacc', '-OPT:IEEE_arith=2']#,'-priv', ]
  cflags = ['-OPT:IEEE_arith=2']
else:
  new_c_compiler = c_compiler

# clone the environment from global env and make some modification of it
myenv   = env.Clone(CPPPATH = include_dir)
myenv.Append(LIBPATH = depend_libpath)
#myenv.Append(CFLAGS = cflags)
myenv.Prepend(LIBS = depend_libs)

objs      = myenv.StaticObject(modules)

# compile the library
ar = myenv.StaticLibrary(target = lib, source = objs)

# install
myenv.Install("#" + dirs['lib'], ar)

# compile each binary
for bin in bin_list:
  bin_obj = myenv.StaticObject(bin[1])
  bin_target = myenv.Program(target = bin[0], source = bin_obj + ar)
  myenv.Install("#" + dirs['bin'], bin_target)
